@import '../../styles/propertySets.css';

.root {
  position: relative;
  font-family: var(--fontFamilyRoboto);
}

.checked {
  display: none;
  fill: var(--marketplaceColor);
}
.checkedSuccess {
  display: none;
  fill: var(--successColor);
}

.boxSuccess,
.box {
  stroke: var(--matterColorAnti);
}

.text {
}
.textRoot {
  @apply --marketplaceListingAttributeFontStyles;
  color: var(--matterColor);
  margin-top: -1px;
  margin-bottom: 1px;
  cursor: pointer;
}

.sectionDescription {
  padding: 0 24px;
  margin-bottom: 35px;
flex: 1;
  @media (--viewportMedium) {
    padding: 0;
    margin-bottom: 36px;
  }
}


.checkboxCntainer{
  display: flex;
  justify-content: flex-start;
  flex-basis: calc(33.33% - 30px);
  flex-shrink: 0;
  padding: 30px;
  background: var(--matterColorLight);
  border-radius: 5px;
  box-shadow: var(--boxShadow);
}
@media (max-width: 1280px){
  .checkboxCntainer{
    margin: 15px 0;
  }
}


.longWord {
  /* fallback option */
  word-break: break-all;
  /* use break-word if available */
  word-break: break-word;
  hyphens: auto;
}




.description {
  margin-bottom: 0;
  font-size: 14px;
  line-height: 23px;
  border-top: 1px solid var(--matterColorAnti);
  margin-top: 20px;
  padding-top: 20px;
}

.desktopPriceValue {
  /* Font */
  @apply --marketplaceH3FontStyles;
  color: var(--marketplaceColor);
  font-size: 24px;
  @media (--viewportMedium) {
    margin-top: 0;
    margin-bottom: 1px;
  }
}

.descriptionTitle {
  /* Font */
  @apply --marketplaceModalTitleStyles;
  color: var(--matterColorDark);
  margin-top: 0;
  margin-bottom: 13px;
  word-break: break-all;
}


.checkboxWrapper {
  /* This should follow line-height */
  height: 32px;
  margin-top: -1px;
  margin-right: 12px;
  align-self: baseline;

  display: inline-flex;
  align-items: center;
  cursor: pointer;
}

.label {
  display: flex;
  align-items: center;
  padding: 0;
}

.input {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;

  /* Highlight the borders if the checkbox is hovered, focused or checked */
  &:hover + label .box,
  &:focus + label .box,
  &:checked + label .box {
    stroke: var(--marketplaceColor);
  }

  /* successColor version */
  &:hover + label .boxSuccess,
  &:focus + label .boxSuccess,
  &:checked + label .boxSuccess {
    stroke: var(--successColor);
  }

  /* Display the "check" when checked */
  &:checked + label .checked {
    display: inline;
    stroke: var(--marketplaceColor);
    stroke-width: 1px;
  }

  /* Display the "check" when checked */
  &:checked + label .checkedSuccess {
    display: inline;
    stroke: var(--successColor);
    stroke-width: 1px;
  }

  /* Hightlight the text on checked, hover and focus */
  &:focus + label .text,
  &:hover + label .text,
  &:checked + label .text {
    color: var(--matterColorDark);
  }
}

